#include <iostream>
using namespace std;
#define r 4
#define c 6
int maximum_path_sum(int mat[][c],int row,int col,int x,int y,int** dp){
if(x<0 || y<0 || x>=row||y>=col){
        return 0;
}
else if(dp[x][y]!=-1){
        return dp[x][y];
}
int d_left=maximum_path_sum(mat,row,col,x+1,y-1,dp);
int down =maximum_path_sum(mat,row,col,x+1,y,dp);
int d_right=maximum_path_sum(mat,row,col,x+1,y+1,dp);
 return dp[x][y]=mat[x][y]+max(d_left,max(down,d_right));


}
int main() {
   
   
   int mat[r][c] = {{10 ,10,  2 , 0 ,20 , 4},
                   {1 , 0 , 0 ,30 , 2 , 5},
                  { 0 ,10 , 4 , 0 , 2 , 0},
                   {1 , 0 , 2 ,20 , 0 , 4}};
       int** dp=new int*[r];
       for(int i=0;i<r;i++){
               dp[i]=new int[c];
       }
      for(int i=0;i<r;i++){
              for(int j=0;j<c;j++){
                      dp[i][j]=-1;
              }
      }
    int maximum=0;
   for(int i=0;i<c;i++){
   int val=maximum_path_sum(mat,r,c,0,i,dp);
   maximum=max(maximum,val);
   }
cout<<maximum<<endl;
}
