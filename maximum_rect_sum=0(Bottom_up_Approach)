#include <bits/stdc++.h>
using namespace std;
void find_index(int dp[],int n,int &maxtop,int &maxdown){
map<int,int>m;
int sum[n];
sum[0]=dp[0];
for(int i=1;i<n;i++){
        sum[i]=sum[i-1]+dp[i];
}
for(int i=0;i<n;i++){
if(sum[i]==0){
        maxtop=0;
        maxdown=i;
 
}
}





}

int sub_matrix(int row,int col,int**mat){

int maxarea=INT_MIN;
int dp[row];
for(int i=0;i<col;i++){
       memset(dp,0,sizeof(dp));
        for(int j=i;j<col;j++){
        
        for(int k=0;k<row;k++){
                dp[k]=dp[k]+mat[k][j];
        }
        
        int maxtop=0;
        int maxdown=0;
        find_index(dp,row,maxtop,maxdown);
         int area=(j-i+1)*(maxdown-maxtop+1);
         if(area>maxarea){
                 maxarea=area;
         }


        }
}


return maxarea;
}


int main() {
         
    int row,col;
    cin>>row>>col;
    int** mat=new int*[row];
    for(int i=0;i<row;i++){
            mat[i]=new int[col];
        
    }
    for(int i=0;i<row;i++){
            for(int j=0;j<col;j++){
                    int a;
                    cin>>a;
                    if(a==0){
                    mat[i][j]=-1;
                    }
                    else{
                            mat[i][j]=1;
                    }
            }
    }
    cout<<sub_matrix(row, col,mat); 
    
}
