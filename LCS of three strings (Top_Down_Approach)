#include <iostream>
using namespace std;
int dp[101][101][101];
int LCS_of_threeString(string& s1,string& s2,string& s3,int l1,int l2,int l3){
if(l1==0||l2==0||l3==0){
       dp[l1][l2][l3]=0;
        return 0;
}
else if(dp[l1][l2][l3]!=-1){
        return dp[l1][l2][l3];
}
else if(s1[l1-1]==s2[l2-1] && s2[l2-1]==s3[l3-1]){
        return dp[l1][l2][l3]=1+LCS_of_threeString(s1,s2,s3,l1-1,l2-1,l3-1);
}
else{
        int left=LCS_of_threeString(s1,s2,s3,l1-1,l2,l3);
        int middle=LCS_of_threeString(s1,s2,s3,l1,l2-1,l3);
        int right=LCS_of_threeString(s1,s2,s3,l1,l2,l3-1);
        return dp[l1][l2][l3]=max(left,max(middle,right));
}

}
int main() {
        int t;
        cin>>t;
        while(t--){
int  l1,l2,l3;
cin>>l1>>l2>>l3;
string s1,s2,s3;
cin>>s1>>s2>>s3;



for(int i=0;i<l1+1;i++){
        for(int j=0;j<l2+1;j++){
              for(int k=0;k<l3+1;k++){
               dp[i][j][k]=-1; 
              }
        }
}
    cout<<LCS_of_threeString(s1,s2,s3,l1,l2,l3)<<endl;
        }
}
