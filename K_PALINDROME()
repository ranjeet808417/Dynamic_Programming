#include<iostream>
using namespace std;

for(int i=0;i<length;i++){
        dp[i][i]=1;
}
for(int i=2;i<=length;i++){
 for(int j=0;j<=length-i;j++){
int k=j+i-1;
if(i==2 && str[j]==str[k]){
dp[j][k]=2;
}
else if(str[j]==str[k]){
        dp[j][k]=2+dp[j+1][k-1];
}
else{
        dp[j][k]=max(dp[j+1][k],dp[j][k-1]);
}
 }

}
return dp[0][length-1];


}
bool is_k_palin(string s,int k)
{
int l=longest_palindromic_subsequence(s,s.length());
if(s.length()-l<=k){
    return 1;
}
else{
    return 0;
}

//Your code here
}
