#include <iostream>
using namespace std;
bool equalPartition(int N, int arr[],int sum,int** dp){

   if(sum==0){
           dp[N][sum]=1;
           return 1;
   }
else if(sum!=0 && N==0){
       dp[N][sum]=0;
        return 0;
}
   if(arr[N-1]>sum){
           return equalPartition(N-1,arr,sum,dp);
   }

    return dp[N][sum]= (equalPartition(N-1,arr,sum-arr[N-1],dp) ||equalPartition(N-1,arr,sum-0,dp));          

    }

int main() {
   int arr[] ={ 3,  4, 6, 5, 2 };
   int N=sizeof(arr)/sizeof(arr[0]);
   int sum=0;
   for(int i=0;i<N;i++){
           sum+=arr[i];
   }
   sum=sum/2;
   int** dp=new int*[N+1];
   for(int i=0;i<N+1;i++){
           dp[i]=new int[sum+1];
   }
    cout<<equalPartition(N,arr,sum,dp);

}
