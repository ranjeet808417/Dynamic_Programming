#include<iostream>
using namespace std;

int optimal_strategy(int arr[],int s,int e,int** dp){
    
  if(s>e){
      return 0;
  }
  else if(dp[s][e]!=-1){
          return dp[s][e];
  }
  
  int first=0,second=0;
  first=arr[s]+min(optimal_strategy(arr,s+2,e,dp),optimal_strategy(arr,s+1,e-1,dp));
  second=arr[e]+min(optimal_strategy(arr,s,e-2,dp),optimal_strategy(arr,s+1,e-1,dp));
  return dp[s][e]=max(first,second);
    
    
}

int main()
 {
	
	int t;
	cin>>t;
	while(t--){
	    int n;
	    cin>>n;
	    int arr[n];
	    for(int i=0;i<n;i++){
	        cin>>arr[i];
	    }
	   int** dp=new int*[n];
           for(int i=0;i<n;i++){
                   dp[i]=new int[n];
           }
            for(int i=0;i<n;i++){
                    for(int j=0;j<n;j++){
                            dp[i][j]=-1;
                    }
            }
            cout<<optimal_strategy(arr,0,n-1,dp)<<endl;
	    
	}
	
	//code
	return 0;
}
