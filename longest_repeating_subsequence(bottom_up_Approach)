#include <iostream>
using namespace std;
int longest_repeating_subsequence(string s1,string s2,int l1,int l2,int** dp){
for(int i=0;i<s1.length()+1;i++){
        for(int j=0;j<s2.length()+1;j++){
        if(i==0 || j==0){
                dp[i][j]=0;
        }
        else if(s1[i-1]==s2[j-1] && i!=j){
         dp[i][j]=1+dp[i-1][j-1];

        }
     else{
             dp[i][j]=max(dp[i][j-1],dp[i-1][j]);
     }
        }
}
return dp[l1][l2];

}
int main() {
   string s1="axyyyyyyyyxx";
   string s2="axyyyyyyyyxx";
    int** dp=new int*[s1.length()+1];
  for(int i=0;i<s1.length()+1;i++){
          dp[i]=new int[s2.length()+1];
  }
  for(int i=0;i<s1.length()+1;i++){
    for(int j=0;j<s2.length()+1;j++){
                  dp[i][j]=0;
          }
  }
    cout<<longest_repeating_subsequence(s1,s2,s1.length(),s2.length(),dp);
}
