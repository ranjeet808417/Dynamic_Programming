#include <iostream>
using namespace std;
int longest_palindromic_subsequence(string& str,int s,int e ,int ** dp){
if(s==e){
      dp[s][e]=1;
        return 1; 
}
else if(s+1==e && str[s]==str[e]){
dp[s][e]=2;
return 2;
}
else if(str[s]==str[e]){
        return dp[s][e]= 2+longest_palindromic_subsequence(str,s+1,e-1,dp);
}
else{
        return dp[s][e]=max(longest_palindromic_subsequence(str,s+1,e,dp),longest_palindromic_subsequence(str,s,e-1,dp));
}


}

int main() {
    string str="GEEKSFORGEEKS"; 
    int** dp=new int*[str.length()];
    for(int i=0;i<str.length();i++){
            dp[i]=new int[str.length()];
    }
    for(int i=0;i<str.length();i++){
            for(int j=0;j<str.length();j++){
                    dp[i][j]=-1;
            }
    }
    cout<<longest_palindromic_subsequence(str,0,str.length()-1,dp)<<endl;
}
