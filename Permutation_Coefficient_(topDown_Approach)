#include <iostream>
using namespace std;
unsigned long long int permutation(unsigned long long int n,unsigned long long int r,unsigned long long int** dp){
if(r==0){
dp[n][r]=1;
return dp[n][r];
}
else if(n<r){
        dp[n][r]=0;
        return dp[n][r];
}
else if(dp[n][r]!=-1){
        return dp[n][r];
}

return dp[n][r]=r*permutation(n-1,r-1,dp)+permutation(n-1,r,dp);

}

 int main() {
    int n=30,r=12;
    unsigned long long int** dp=new unsigned long long int*[n+1];
    for(int i=0;i<n+1;i++){
            dp[i]=new unsigned long long int[r+1];
    }
    for(int i=0;i<n+1;i++){
            for(int j=0;j<r+1;j++){
                    dp[i][j]=-1;
            }
    }
    cout<<permutation(n,r,dp);
}
